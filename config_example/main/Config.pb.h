/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8-dev */

#ifndef PB_CONFIG_PB_H_INCLUDED
#define PB_CONFIG_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _WifiConfig {
    char ssid[32];
    char pass[64];
} WifiConfig;

typedef struct _NetConfig {
    bool use_dhcp;
    char ip[32];
    char netmask[32];
    char gw[32];
} NetConfig;

typedef struct _Config {
    bool has_wifi_config;
    WifiConfig wifi_config;
    bool has_net_config;
    NetConfig net_config;
} Config;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define WifiConfig_init_default                  {"", ""}
#define NetConfig_init_default                   {0, "", "", ""}
#define Config_init_default                      {false, WifiConfig_init_default, false, NetConfig_init_default}
#define WifiConfig_init_zero                     {"", ""}
#define NetConfig_init_zero                      {0, "", "", ""}
#define Config_init_zero                         {false, WifiConfig_init_zero, false, NetConfig_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define WifiConfig_ssid_tag                      1
#define WifiConfig_pass_tag                      2
#define NetConfig_use_dhcp_tag                   1
#define NetConfig_ip_tag                         2
#define NetConfig_netmask_tag                    3
#define NetConfig_gw_tag                         4
#define Config_wifi_config_tag                   1
#define Config_net_config_tag                    2

/* Struct field encoding specification for nanopb */
#define WifiConfig_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   ssid,              1) \
X(a, STATIC,   SINGULAR, STRING,   pass,              2)
#define WifiConfig_CALLBACK NULL
#define WifiConfig_DEFAULT NULL

#define NetConfig_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     use_dhcp,          1) \
X(a, STATIC,   SINGULAR, STRING,   ip,                2) \
X(a, STATIC,   SINGULAR, STRING,   netmask,           3) \
X(a, STATIC,   SINGULAR, STRING,   gw,                4)
#define NetConfig_CALLBACK NULL
#define NetConfig_DEFAULT NULL

#define Config_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  wifi_config,       1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  net_config,        2)
#define Config_CALLBACK NULL
#define Config_DEFAULT NULL
#define Config_wifi_config_MSGTYPE WifiConfig
#define Config_net_config_MSGTYPE NetConfig

extern const pb_msgdesc_t WifiConfig_msg;
extern const pb_msgdesc_t NetConfig_msg;
extern const pb_msgdesc_t Config_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define WifiConfig_fields &WifiConfig_msg
#define NetConfig_fields &NetConfig_msg
#define Config_fields &Config_msg

/* Maximum encoded size of messages (where known) */
#define Config_size                              203
#define NetConfig_size                           101
#define WifiConfig_size                          98

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
